makeBricks 
http://codingbat.com/prob/p183562

We want to make a row of bricks that is goal inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return true if it is possible to make the goal by choosing from the given bricks. This is a little harder than it looks and can be done without any loops. See also: Introduction to MakeBricks
makeBricks(3, 1, 8) → true
makeBricks(3, 1, 9) → false
makeBricks(3, 2, 10) → true
makeBricks(3, 1, 7) → true
makeBricks(3, 2, 3) → true
public boolean makeBricks(int small, int big, int goal)
 */

func makeBricks(_ small: Int, _ big: Int, _ goal: Int) -> Bool {
    if big*5 >= goal {
        return goal%5 <= small
    }
    return (goal - big*5) <= small
}



print(
makeBricks(3, 1, 8),
makeBricks(3, 1, 9),
makeBricks(3, 2, 10),
makeBricks(3, 1, 7),
makeBricks(3, 2, 3)
)

/* Java Solution
public boolean makeBricks(int small, int big, int goal) {
  if (big*5 >= goal) {
    return goal%5 <= small;
  }
  return goal - big*5 <= small;
}
*/
